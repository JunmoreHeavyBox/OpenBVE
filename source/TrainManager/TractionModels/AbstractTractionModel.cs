using TrainManager.Car;

namespace TrainManager.TractionModels
{
	/// <summary>An abstract traction model</summary>
	public abstract class AbstractTractionModel
	{
		/// <summary>Holds a reference to the base car</summary>
		internal readonly CarBase Car;
		/// <summary>The current deceleration due to brake effects</summary>
		public double DecelerationDueToBrake;
		/// <summary>The current decelerationdue to traction effects</summary>
		/// <remarks>Regenerative braking etc.</remarks>
		public double DecelerationDueToTraction;
		/// <summary>The current total acceleration output supplied by the car from all sources</summary>
		/// <remarks>Is positive for power and negative for brake, regardless of the train's direction</remarks>
		public double Acceleration;
		/// <summary>The acceleration generated by the motor</summary>
		/// <remarks>Is positive for power and negative for brake, regardless of the train's direction</remarks>
		public double MotorAcceleration;

		/// <summary>Creates a new abstract traction model</summary>
		protected AbstractTractionModel(CarBase car)
		{
			Car = car;
		}

		/// <summary>Updates the traction model</summary>
		/// <param name="TimeElapsed">The frame time elapsed</param>
		/// <param name="Speed">The updated speed value</param>
		public virtual void Update(double TimeElapsed, out double Speed)
		{
			Speed = 0;
		}
	}
}
